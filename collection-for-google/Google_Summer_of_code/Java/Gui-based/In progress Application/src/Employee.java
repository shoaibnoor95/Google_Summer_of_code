


import java.awt.Image;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;






/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shoaib
 */
public class Employee extends javax.swing.JFrame {
    ResultSet rs =null;
    Statement st;
   // log l1=new log();
    //static java.sql.Connection conn;
    /**
     * Creates new form Employee
     */
    public Employee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        first_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        emp_id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        last_name = new javax.swing.JTextField();
        pAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        joinDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        telephone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        salary = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cnic = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        due_salary = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        advance_salary = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        designation = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        qualiify = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("First Name");

        first_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                first_nameActionPerformed(evt);
            }
        });
        first_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                first_nameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                first_nameKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Employee Id");

        emp_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emp_idFocusLost(evt);
            }
        });
        emp_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emp_idActionPerformed(evt);
            }
        });
        emp_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emp_idKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Last Name");

        last_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_nameActionPerformed(evt);
            }
        });
        last_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                last_nameKeyTyped(evt);
            }
        });

        pAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pAddressActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Address");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Salary");

        joinDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinDateActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-employee.jpg"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Telephone Number");

        telephone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telephoneActionPerformed(evt);
            }
        });
        telephone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telephoneKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Mobile Number");

        mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileActionPerformed(evt);
            }
        });
        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Date Of Joining");

        salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryActionPerformed(evt);
            }
        });
        salary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                salaryKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("CNIC #");

        cnic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnicActionPerformed(evt);
            }
        });
        cnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cnicKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Permenent Address ");

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressKeyTyped(evt);
            }
        });

        add.setFont(new java.awt.Font("Matura MT Script Capitals", 0, 24)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Email");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female", "Others" }));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Gender");

        update.setFont(new java.awt.Font("Matura MT Script Capitals", 0, 24)); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Matura MT Script Capitals", 0, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Due Salary");

        due_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                due_salaryActionPerformed(evt);
            }
        });
        due_salary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                due_salaryKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Advance Salary ");

        advance_salary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advance_salaryActionPerformed(evt);
            }
        });
        advance_salary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                advance_salaryKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Designation");

        designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designationActionPerformed(evt);
            }
        });
        designation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                designationKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                designationKeyTyped(evt);
            }
        });

        label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelMouseClicked(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Qualification");

        qualiify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qualiifyActionPerformed(evt);
            }
        });
        qualiify.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qualiifyKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(82, 82, 82)
                                        .addComponent(jLabel10))
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(last_name, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(first_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(advance_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(due_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel5))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qualiify, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(193, 193, 193)
                                        .addComponent(jLabel8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(joinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emp_id, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(emp_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(last_name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(designation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(joinDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cnic, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(due_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(advance_salary, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(qualiify, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emp_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emp_idActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_emp_idActionPerformed

    private void salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salaryActionPerformed

    private void pAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pAddressActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
       if(salary.getText().compareTo("")==0){
           JOptionPane.showMessageDialog(null, "Please insert salary");
       }
       else{
        getInfo(); 
        first_name.setText("");
        last_name.setText("");
        emp_id.setText("");
        telephone.setText("");
        mobile.setText("");
        joinDate.setText("");
        address.setText("");
        pAddress.setText("");
        gender.setSelectedItem("Select Gender");
        cnic.setText("");
        email.setText("");
        salary.setText("");
        due_salary.setText("");
        advance_salary.setText("");
        designation.setText("");
        qualiify.setText("");
       }
    }//GEN-LAST:event_addActionPerformed

    private void cnicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnicActionPerformed

    private void first_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_first_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_first_nameActionPerformed

    private void first_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_first_nameKeyPressed
        // TODO add your handling code here:
       try{  
           Statement stmt = Connect.conn.createStatement();
         String sql = "SELECT ID FROM EMPLOYEE\n" +
         "ORDER BY ID DESC\n" +
         "LIMIT 1;";
         ResultSet rs = stmt.executeQuery(sql);
          while(rs.next()){
              int id  = rs.getInt("ID");
              if(id==0){
               id=1;
               emp_id.setText(Integer.toString(id));
              }
              else{
              id=id+1;
              emp_id.setText(Integer.toString(id));
              }
          }
       }
       catch(SQLException exc){
           System.out.println("Error "+exc);
       }
       
           
       
        
    }//GEN-LAST:event_first_nameKeyPressed

    private void first_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_first_nameKeyTyped
        // TODO add your handling code here:
        char name =evt.getKeyChar();
        if(!(name<'0' || name>'9'))
        {
            getToolkit().beep();
            evt.consume();
        }
        else if(first_name.getText().length()>=30)
        {
            evt.consume();
        }
    }//GEN-LAST:event_first_nameKeyTyped

    private void last_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_last_nameKeyTyped
        // TODO add your handling code here:
        char name =evt.getKeyChar();
        if(!(name<'0' || name>'9'))
        {
            getToolkit().beep();
            evt.consume();
        }
        else if(last_name.getText().length()>=30)
        {
            evt.consume();
        }
    }//GEN-LAST:event_last_nameKeyTyped

    private void addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyTyped
        // TODO add your handling code here:
       
    }//GEN-LAST:event_addressKeyTyped

    private void telephoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telephoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telephoneActionPerformed

    private void telephoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telephoneKeyTyped
        // TODO add your handling code here:
        char name =evt.getKeyChar();
        if(name<'0' || name>'9')
        {
            getToolkit().beep();
            evt.consume();
        }
        else if(mobile.getText().length()>=11)
        {
            evt.consume();
        }
    }//GEN-LAST:event_telephoneKeyTyped

    private void mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyTyped
        // TODO add your handling code here:
        char name =evt.getKeyChar();
        if(name<'0' || name>'9')
        {
            getToolkit().beep();
            evt.consume();
        }
        else if(mobile.getText().length()>=11)
        {
            evt.consume();
        }
    }//GEN-LAST:event_mobileKeyTyped

    private void salaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_salaryKeyTyped
        // TODO add your handling code here:
        /*char name =evt.getKeyChar();
        if(name<'0' || name>'9')
        {
            getToolkit().beep();
            evt.consume();
        }*/
        
    }//GEN-LAST:event_salaryKeyTyped

    private void cnicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnicKeyTyped
        // TODO add your handling code here:
        char name =evt.getKeyChar();
        if((name<'0' || name>'9'))
        {
            getToolkit().beep();
            evt.consume();
        }
        else if(cnic.getText().length()>=13)
        {
            evt.consume();
        }
    }//GEN-LAST:event_cnicKeyTyped

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        updateInfo();
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String Query = "delete from EMPLOYEE where id ="+emp_id.getText();
            
    try{
        PreparedStatement pst= Connect.conn.prepareStatement(Query);
         pst.execute();
    
     }catch(Exception e){
        e.printStackTrace();
    }
    }//GEN-LAST:event_deleteActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderActionPerformed

    private void due_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_due_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_due_salaryActionPerformed

    private void due_salaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_due_salaryKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_due_salaryKeyTyped

    private void advance_salaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advance_salaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_advance_salaryActionPerformed

    private void advance_salaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_advance_salaryKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_advance_salaryKeyTyped

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void last_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_nameActionPerformed

    private void designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_designationActionPerformed

    private void designationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_designationKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_designationKeyPressed

    private void designationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_designationKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_designationKeyTyped

    private void qualiifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qualiifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qualiifyActionPerformed

    private void qualiifyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qualiifyKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_qualiifyKeyTyped

    private void joinDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_joinDateActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_labelMouseClicked

    private void emp_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emp_idKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_emp_idKeyReleased

    private void emp_idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emp_idFocusLost
        // TODO add your handling code here:
        try{
        showImages();
        }
        catch(Exception exc){
            JOptionPane.showMessageDialog(null, "No Images inserted");
            label.setIcon(null);
            
        }
        search();
        
    }//GEN-LAST:event_emp_idFocusLost

    private void mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileActionPerformed
/*public String[] getImages(){
    File file = new File(getClass().getResource("images/").getFile());
    String [] imagesList = file.list();
    return imagesList;
}*/
public void showImages(){
    //String [] imagesList = getImages();
    //String imageName = imagesList[index];
    File file = new File(getClass().getResource("pictures/").getFile());
    String imageName= emp_id.getText();
    ImageIcon icon = new ImageIcon(getClass().getResource("pictures/"+imageName+".jpg"));
    Image image = icon.getImage().getScaledInstance(label.getWidth(),label.getHeight(),Image.SCALE_SMOOTH);
    label.setIcon(new ImageIcon(image));
}
      

    public void getInfo(){
       
        String id=emp_id.getText();
        String fname=first_name.getText();
        String lname=last_name.getText();
        String ad= address.getText();
        String pad=pAddress.getText();
        String dat=joinDate.getText();
        String cel=mobile.getText();
        String tel=telephone.getText();
        Double pay=Double.parseDouble(salary.getText());
        String nic= cnic.getText();
        String mail=email.getText();
        String qualify=qualiify.getText();
        String design=designation.getText();
        if((id.compareTo("")==0)||(id.compareTo(" ")==0)){
            id="require";
        }
        if((fname.compareTo("")==0)||(fname.compareTo(" ")==0)){
            fname="require";
        }
        if((lname.compareTo("")==0)||(lname.compareTo(" ")==0)){
            lname="require";
        }
        if((ad.compareTo("")==0)||(ad.compareTo(" ")==0)){
            ad="require";
        }
        if((pad.compareTo("")==0)||(pad.compareTo(" ")==0)){
            pad="require";
        }
        if((dat.compareTo("")==0)||(dat.compareTo(" ")==0)){
            dat="require";
        }
        if((cel.compareTo("")==0)||(cel.compareTo(" ")==0)){
            cel="require";
        }
        if((design.compareTo("")==0)||(design.compareTo(" ")==0)){
            design="require";
        }
       
        if((mail.compareTo("")==0)||(mail.compareTo(" ")==0)){
            mail="require";
        }
        if((tel.compareTo("")==0)||(tel.compareTo(" ")==0)){
            tel="require";
        }
        if((qualify.compareTo("")==0)||(qualify.compareTo(" ")==0)){
            qualify="require";
        }
        if((nic.compareTo("")==0)||(nic.compareTo(" ")==0)){
            nic="require";
        }
        
    String Query = "insert into Employee(ID,FIRST_NAME,LAST_NAME,ADDRESS,DATE_OF_JOINING,TELEPHONE,MOBILE,SALARY,CNIC,GENDER,P_ADDRESS,EMAIL,QUALIFICATION,DESIGNATION)"
            + "values('"+id+"','"+fname+"','"+lname+"','"+ad+"','"+dat+"','"+tel+"','"+cel+"','"+pay+"','"+nic+"','"+gender.getSelectedItem()+"','"+pad+"','"+mail+"','"+qualify+"','"+design+"')" ;
             
    try{
        PreparedStatement pst= Connect.conn.prepareStatement(Query);
         pst.execute();
         JOptionPane.showMessageDialog(null, "Record Inserted");
         
    }catch(SQLException e){
        JOptionPane.showMessageDialog(null, "Wrong option selected");
    }
    catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null, "Please insert the amount of salary");
    }
        
}
        
    
    public void search(){
    try{
        Statement stmt = Connect.conn.createStatement();
        String sql = "SELECT First_Name from EMPLOYEE where ID="+emp_id.getText();
        ResultSet rs= stmt.executeQuery(sql);
         
        if(rs.next()){
            String firstn= rs.getString("First_Name");
            first_name.setText(firstn);
        }
        else{
            first_name.setText("");
        }
    }catch(SQLException exc){
        
    }
    
    try{
      Statement stmt = Connect.conn.createStatement();
        String sql = "SELECT Last_Name from EMPLOYEE where ID="+emp_id.getText();
        ResultSet rs= stmt.executeQuery(sql);
         
        if(rs.next()){
            String lastn= rs.getString("Last_Name");
            last_name.setText(lastn);
        }
        else{
            last_name.setText("");
        }
           
    }catch(Exception e){
     
        System.out.println("Not found");  
    }
    
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT ADDRESS from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
        
          if(rs.next()){
            String addr  = rs.getString("ADDRESS");
              address.setText(addr); 
              }
          else{
              address.setText("");
          }
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
        
    }
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT DATE_OF_JOINING from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
           
      if(rs.next()){
              String addr  = rs.getString("DATE_OF_JOINING");  
              joinDate.setText(addr); 
              }
          else{
              joinDate.setText("");
          }
    }catch(Exception e){
   //  JOptionPane.showMessageDialog(null, "No Record Found");
        
    }
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT DESIGNATION from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
      if(rs.next()){
              String addr  = rs.getString("DESIGNATION");  
              designation.setText(addr); 
              }
          else{
              designation.setText("");
          }          
    }catch(Exception e){
    // JOptionPane.showMessageDialog(null, "No Record Found");
    }
     try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT MOBILE from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
          if(rs.next()){
              String addr  = rs.getString("MOBILE");
              
              mobile.setText(addr);       
              }
              else{
              mobile.setText("");
              }
          
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
    }
      try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT P_ADDRESS from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
      if(rs.next()){
              String addr  = rs.getString("P_ADDRESS");  
              pAddress.setText(addr); 
              }
          else{
              pAddress.setText("");
          }          
    }catch(Exception e){
    // JOptionPane.showMessageDialog(null, "No Record Found");
    }
      try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT TELEPHONE from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
          
              String addr  = rs.getString("TELEPHONE");
              if(rs.next()){
               
               telephone.setText(addr);
              }
              else{
              telephone.setText("");
              }
          
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
    }
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT GENDER from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
          while(rs.next()){
              String addr  = rs.getString("GENDER");
              if(rs.getString("GENDER")==null){
               
               gender.setSelectedIndex(0);
              }
              else if(addr.compareTo("Male")==0){
              gender.setSelectedIndex(1);
              }
              else if(addr.compareTo("Female")==0){
              gender.setSelectedIndex(2);
              }
              else if(addr.compareTo("Others")==0){
              gender.setSelectedIndex(3);
              }
          }
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
    }
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT CNIC from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
      if(rs.next()){
              String addr  = rs.getString("CNIC");  
              cnic.setText(addr); 
              }
          else{
              cnic.setText("");
          }
          
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
    }
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT EMAIL from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
      if(rs.next()){
              String addr  = rs.getString("EMAIL");  
              email.setText(addr); 
              }
          else{
             email.setText("");
          }
          
    }catch(Exception e){
    // JOptionPane.showMessageDialog(null, "No Record Found");
    }
    try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT QUALIFICATION from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
          
              String addr  = rs.getString("QUALIFICATION");
              if(rs.next()){
               qualiify.setText(addr);  
              }
              else{
              qualiify.setText("");
              }
    }
    catch(Exception e){
    // JOptionPane.showMessageDialog(null, "No Record Found");
    }
     try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT DESIGNATION from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
          
              String addr  = rs.getString("DESIGNATION");
              if(rs.next()){ 
              designation.setText(addr); 
              }
              else{
                designation.setText("");
              }
          
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
    }
     try{
      Statement stmt = Connect.conn.createStatement();
      String sql = "SELECT DESIGNATION from EMPLOYEE where ID="+emp_id.getText();
      ResultSet rs = stmt.executeQuery(sql);
          
              String addr  = rs.getString("DESIGNATION");
              if(rs.next()){ 
              salary.setText(addr); 
              }
              else{
                salary.setText("");
              }
    }catch(Exception e){
     //JOptionPane.showMessageDialog(null, "No Record Found");
         System.out.println("error");
    }
    
    }
    
    
    public void updateInfo(){
 
    /*String Query = "Update Employee(ID,FIRST_NAME,LAST_NAME,ADDRESS,DATE_OF_JOINING,TELEPHONE,MOBILE,SALARY,CNIC,GENDER,P_ADDRESS,EMAIL,PREV_SALARY,ADVANCE_SALARY,QUALIFICATION)"
            + "values('"+emp_id.getText()+"','"+first_name.getText()+"','"+last_name.getText()+"','"+address.getText()+"','"+joinDate.getText()+"','"+telephone.getText()+"','"+mobile.getText()+"','"+Double.parseDouble(salary.getText())+"','"+cnic.getText()+"','"+gender.getSelectedItem()+"','"+pAddress.getText()+"','"+email.getText()+designation.getText()+"','"+Double.parseDouble(due_salary.getText())+"','"+Double.parseDouble(advance_salary.getText())+"','"+advance_salary1.getText()+"')" ;
      */
    String Query = "Update EMPLOYEE SET FIRST_NAME='"+first_name.getText()+"',SET LAST_NAME='"+last_name.getText()+"',SET ADDRESS='"+address.getText()+"',SET DATE_OF_JOINING='"+joinDate.getText()+"',SET TELEPHONE='"+telephone.getText()+"',SET MOBILE='"+mobile.getText()+"',SET SALARY='"+Double.parseDouble(salary.getText())+"',SET CNIC='"+cnic.getText()+"',SET DESIGNATION='"+designation.getText()+"',SET P_ADDRESS='"+pAddress.getText()+"',SET EMAIL='"+email.getText()+"',GENDER='"+gender.getSelectedIndex()+"',QUALIFICATION='"+qualiify.getText()+"',SET DESIGNATION='"+designation.getText()+" Where id="+emp_id.getText();
    try{
        PreparedStatement pst= Connect.conn.prepareStatement(Query);
         pst.execute();
         JOptionPane.showMessageDialog(null, "Record Updated");
         
    }catch(Exception e){
        e.printStackTrace();
         JOptionPane.showMessageDialog(null, "Wrong Option Selected");
    }
}

/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField address;
    private javax.swing.JTextField advance_salary;
    private javax.swing.JTextField cnic;
    private javax.swing.JButton delete;
    private javax.swing.JTextField designation;
    private javax.swing.JTextField due_salary;
    private javax.swing.JTextField email;
    private javax.swing.JTextField emp_id;
    private javax.swing.JTextField first_name;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField joinDate;
    private javax.swing.JLabel label;
    private javax.swing.JTextField last_name;
    private javax.swing.JTextField mobile;
    private javax.swing.JTextField pAddress;
    private javax.swing.JTextField qualiify;
    private javax.swing.JTextField salary;
    private javax.swing.JTextField telephone;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
//static Connection conn;
    
}